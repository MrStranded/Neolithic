///////////////////////////////////////////////////////////////////////////// Grow

Drive: driGrow {
    solutions { proGrow; }

    Script: condition { return .attSize < .attMaxSize; }

    Script: getWeight {
        return(100 - 100 * .attSize / .attMaxSize);
    }
}

Process: proGrow {
    Script: condition {
        require(.attNutrition > 0);
    }

    Script: process {
		..attSize++;
		..attNutrition--;
    }
}

///////////////////////////////////////////////////////////////////////////// Grow into tree

Drive: driGrowIntoTree {
    solutions { proGrowIntoTree; }

    Script: condition {
		return true;
	}

    Script: getWeight {
        return 100;
    }
}

Process: proGrowIntoTree {
    Script: condition {
        tile = getTile(self);

        require(isOnFloor(self));
        require(getLightLevel(self) >= .attLightSensitivity);
        require(getFullAtt(tile, "attSize") < 100);
        require(getHeight(self) >= getWaterHeight(self));
    }
    Script: process {
        setStage(self, "sapling");
        addEffect(self, effSapling);
    }
}


///////////////////////////////////////////////////////////////////////////// Photosynthesis

Drive: driGatherEnergy {
    solutions { proPhotosynthesis; }

    Script: condition { return true; }

    Script: getWeight {
        return(100 - .attNutrition - .attWater);
    }
}

Process: proPhotosynthesis {
	Script: condition {
		// require(getLightLevel(self) + getTile(self).attLightLevel >= .attLightSensitivity);
        require(getLightLevel(self) + getFullAtt(getTile(self), "attLightLevel") >= .attLightSensitivity);
		// require(getStage(self) != "seed");
		require(.attWater > 0);
	}
	Script: process {
		..attWater--;
		..attNutrition++;
	}

	Script: discovery(actor) { // there is no way for an entity to learn photosynthesis
		require(0);
	}
}

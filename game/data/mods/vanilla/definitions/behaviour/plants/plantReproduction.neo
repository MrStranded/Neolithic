Drive: driPlantReproduction {
	solutions {
		proPropagate;
		proDropFruit;
	}
	
	Script: condition {
		// require(.attSize >= .attMaxSize / 2);
		require(.attAge >= .attMatureAge);
	}

	Script: getWeight {
		if (..attMaxSize == 0) {
			print("no max size!");
			breakpoint(self, ..attMaxSize);
		}
	    return 50 + percent(.attNutrition, .attMaxSize) / 2;
	}
}

///////////////////////////////////////////////////////////////////////////// Grow fruit

Process: proDropFruit {
	Script: condition {
		require(->fruit);
		require(->fruit.attNutrition > .attMaxSize / 2);
	}
	
	Script: process {
		tile = getNeighbor(getTile(self), random(3));
		pickUp(tile, ->fruit);
		forget(->fruit);
		setDefaultStage(self);
	}

	solutions {
		proGrowFruit;
	}
}

Process: proGrowFruit {
	Script: condition {
		require(.attNutrition >= .attGrowthSize);
	}

	Script: process {
		..attNutrition -= .attGrowthSize;
		
		if (->fruit) {
			->fruit..attNutrition += .attGrowthSize;
		} else {
			setStage(self, "ripe");

			->fruit = create(getProperty(self, "fruit"), self);

			seed = create(getType(self), ->fruit);
			setStage(seed, "seed");
			mixAttributes(seed, self, self);
		}
	}
}

///////////////////////////////////////////////////////////////////////////// Propagate

Process: proPropagate {
	Script: condition {
		require(.attNutrition > .attMaxSize);
		
		->neighbor = getNeighbor(getTile(self), random(3));
		require(getFullAtt(->neighbor, "attSize") < 100);
	}
	
	Script: process {
		..attNutrition -= .attMaxSize;
	
		seed = create(cBush, ->neighbor);
		mixAttributes(seed, self);
		setStage(seed, "seed");
		seed..attNutrition += .attMaxSize;
	}
}

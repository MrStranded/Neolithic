
///////////////////////////////////////////////////////////////////////////// Effects

Effect: effSleep {
    name = "Sleeping";

    attributes {
        attSleeping, 1;
    }

    Script: removeCondition(carrier) {
        if (carrier.attSleeping <= 0) { // something woke you up!
            return(true);
        }

        lightLevel = getLightLevel(carrier) + getTile(carrier).attLightLevel;
        require(lightLevel > carrier.attLightSensitivity);
        require(carrier.attFatigue <= carrier.attFatigueSensitivity*lightLevel/100);
    }
}

///////////////////////////////////////////////////////////////////////////// Drives

Drive: driSleep {
	Script: condition {
	    require(! .attSleeping);
		require(.attFatigue > .attFatigueSensitivity || getLightLevel(self) <= .attLightSensitivity);
		require(.attHealth > 0);
	}

	solutions {
		proSleep;
	}

	Script: getWeight() {
	    return(max(.attFatigue - .attFatigueSensitivity, 0));
	}
}

///////////////////////////////////////////////////////////////////////////// Processes

Process: proSleep {
    Script: condition {
        require(getHeight(self) > getWaterHeight(self));
    }

	Script: process {
        //deleteEffects(self, effHunger);
	    //addOccupation(self, .attSleepTime, proSleep->awake);
	    addEffect(self, effSleep);
	}

	Script: awake {
	    ..attSleeping = 0;
	}
}

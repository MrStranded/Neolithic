
///////////////////////////////////////////////////////////////////////////// Effects

Effect: effAchingFeet {
    name = "Aching feet";

    attributes {
        attFatigue, 10;
        attHealth, "-5";
    }

    Script: tick {
        if ((.attFatigue) > 0 && chance(0.1)) {
            ..attFatigue--;
        }
    }

    Script: removeCondition {
        require (.attFatigue <= 0);
    }
}

///////////////////////////////////////////////////////////////////////////// Drives

Drive: driMove {
	Script: condition {
		require(.attFatigue < .attCuriosity);
		require(.attNutrition > 30);
	}

	solutions {
		proStroll;
	}

	Script: getWeight() {
	    return(max(.attCuriosity - .attFatigue, 0));
	}
}

///////////////////////////////////////////////////////////////////////////// Processes

Process: proStroll {
	Script: process {
		tile = getNeighbor(getTile(self), random(3));
		if (self->reachable(getTile(self), tile)) {
		    setAt(self, tile);
		    if (chance(0.01)) {
		        addEffect(self, effAchingFeet);
		    }
		    //self..attNutrition--;
		}
	}

	//solutions {}

	//Script: discovery {}
}

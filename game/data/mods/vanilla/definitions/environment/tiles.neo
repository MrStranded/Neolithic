
///////////////////////////////////////////////////////////////////////////// Tiles

Tile: tDirt inherits tSoakingHumidity, tTemperature {
	name = "Dirt";

	preferredHeight = 120;
	preferredHeightBlur = 20;

	topColor = rgb 0.6, 0.4, 0.1;
	topColorVariance = rgb 0.05, 0, 0.05;
	
	sideColor = rgb 0.35, 0.25, 0.2;
	sideColorVariance = rgb 0.05, 0.05, 0;
	
	attributes {
		attTicks, 10;
	    attNutrition, 10;
	    attSediment, 15;
		attPorosity, 15;
		emitHeat, 30;
	}

	Script: update {
		if (.attHumidity >= 50) {
		    if (chance(0.05)) {
		        ..attHumidity -= 30;
			    change(self, tGras);
			}
		} else if (.attHumidity <= 0) {
		    if (chance(0.005)) {
		        change(self, tSand);
		    }
		}
	}
}

Tile: tGras inherits tSoakingHumidity, tTemperature {
	name = "Gras";
	preferredHeight = 150;
	preferredHeightBlur = 50;

	topColor = color 120, 200, 50;
	topColorVariance = color 10, 15, 0;
	
	sideColor = color 100, 90, 80;
	sideColorVariance = color 10, 10, 0;

	attributes {
		attTicks, 5;
		attNutrition, 20;
		attPorosity, 15;
	    attSediment, 10;
		absorbHeat, 30;
		emitHeat, 30;
	}

	Script: update {
		if (.attHumidity <= 0) {
		    if (chance(0.01)) {
		        change(self, tDirt);
		    }
		}
		if (.attNutrition > 100) { ..attNutrition--; }
	}
}

Tile: tSand inherits tSoakingHumidity, tTemperature {
	name = "Sand";
	preferredHeight = 100;
	preferredHeightBlur = 5;

	topColor = color 200, 150, 30;
	topColorVariance = color 10, 0, 10;
	
	sideColor = color 120, 110, 90;
	sideColorVariance = color 10, 10, 0;

	attributes {
	    attSediment, 20;
		attPorosity, 10;
		heatConductivity, 3;
		absorbHeat, 100;
		emitHeat, 70;
	}

	Script: update {
		if (.attHumidity >= 50) {
		    if (chance(0.1)) {
		        ..attHumidity -= 30;
		        change(self, tDirt);
		    }
		}
	}
}

Tile: tOceanFloor {
	name = "Ocean Floor";
	preferredHeight = 0;
	preferredHeightBlur = 100;
	runTicks = false;
	
	topColor = color 150, 120, 100;
	topColorVariance = color 10, 0, 10;
	
	sideColor = color 120, 90, 70;
	sideColorVariance = color 10, 0, 10;
}

Tile: tStone inherits tSoakingHumidity, tTemperature {
    // runTicks = false;
	preferredHeight = 200;
	preferredHeightBlur = 10;
	name = "Stone";
	
	topColor = color 150, 150, 120;
	topColorVariance = color 10, 0, 0;
	
	sideColor = color 100, 100, 80;
	sideColorVariance = color 10, 0, 0;

	attributes {
        attTicks, 30;
	    attSediment, 5;
		attPorosity, 3;
		heatConductivity, 5;
		absorbHeat, 60;
		emitHeat, 20;
	}
}

Tile: tSoakingHumidity {
	preferredHeight = 250;

	topColor = color 0, 0, 255;
	sideColor = color 255, 0, 0;
	ticks = 20;

    attributes {
        attTicks, 20;
    }

    Script: change {
        delayNextTick(self, random(.attTicks));
    }

    Script: tick {
        delayNextTick(self, .attTicks);
        ..attHumidity -= 1;

        water = getInstance(entWater, self);
        if (water) {
            ..attHumidity += 100;
        } else {
            for (n : getNeighbors(self)) {
                if (n.attHumidity > .attHumidity) {
                    ..attHumidity += .attPorosity;
                    n..attHumidity -= .attPorosity;
                }
            }
        }

		->updateTemperature();
        ->update();
    }
}

Tile: tTemperature {

	attributes {
		heatConductivity, 1;
		absorbHeat, 50;
		emitHeat, 50;
	}

	Script: updateTemperature() {
		ll = getLightLevel(self) + .attLightLevel;
		
		if (chance(.absorbHeat / 100)) {
			if (ll > .temperature) {
				..temperature += .heatConductivity;
			} else {
				n = getNeighbor(self, random(3));
				if (n.emitHeat > 0 && .temperature < n.temperature) {
					n..temperature -= .heatConductivity;
					..temperature += .heatConductivity;
				}
			}
		}
		if (chance(.emitHeat / 100)) {
			if (ll < .temperature) {
				..temperature -= .heatConductivity;
			} else {
				n = getNeighbor(self, random(3));
				if (n.absorbHeat > 0 && .temperature > n.temperature) {
					n..temperature += .heatConductivity;
					..temperature -= .heatConductivity;
				}
			}
		}
	}
}

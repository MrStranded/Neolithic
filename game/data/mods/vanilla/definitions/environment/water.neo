Entity: entSource {
    name = "Sweet water source";

    Script: tick {
        water = getInstance(entWater, getTile(self));

        if (water) {
            water..attWater++;
        } else {
            (create(entWater, getTile(self)))..attWater++;
        }
    }
}

Entity: entDeepSource {
    name = "Deep water source";

    attributes { attTicks, 10; }

    Script: tick {
        delayTick(.attTicks);

        getTile(self)..attHumidity += 20;
    }
}

Entity: entWater {
    name = "Sweet water";

    Script: tick {
        if (chance(0.01)) {
            ..attWater--;

            if (chance(0.5)) {
                ->createCloud(self, 5 + 20 * getLightLevel(self) / 100);
            }
        }

        h = getHeight(self) + .attWater;

        if (.attWater > 0) {
            lowest = h;
            for (n : getNeighbors(self)) {
                oh = getHeight(n) + getFullAtt("attWater", n);
                if (oh < lowest) {
                    lowest = oh;
                    next = n;
                }
            }

            if (next) {
                d = floor( min( (h - lowest) / 2, (.attWater + 1) / 2 ) );
                if (d > 0) {
                    ..attWater -= d;
                    h -= d;

                    if (getTile(self).attSediment > 0) {
                        h1 = getHeight(self);
                        h2 = getHeight(next);
                        if (h1 > h2 + 1 && chance(getTile(self).attSediment / 100)) {
                            h--;
                            getTile(self)..attSediment--;
                            next..attSediment++;
                            setHeight(self, h1 - 1);
                            setHeight(next, h2 + 1);
                        }
                    }

                    if (lowest > 100 || getHeight(next) - getWaterHeight(next) <= d) {
                        ->createWater(next, d);
                    }
                }
            }
        }

        isInOcean = h < 100;
        if (isInOcean) {
            tile = getTile(self);
            if (chance(0.75)) { tile = getNeighbor(self, random(3)); }

            ->createCloud(tile, 5 + 20 * getLightLevel(self) / 100);
        }

        ->updateWaterHeight();

        if (.attWater <= 0 || isInOcean) {
            destroy(self);
        }
    }

    Script: updateWaterHeight {
        setWaterHeight(self, max(getHeight(self) + .attWater, 100));
        updatePlanetMesh();
    }

    Script: createWater(target, water) {
        other = getInstance(entWater, getTile(target));

        if (!other) {
            other = create(entWater, getTile(target));
        }

        other..attWater += water;
        other->updateWaterHeight();
    }

    Script: createCloud(target, humidity) {
        other = getInstance(entCloud, getTile(target));
        if (other) {
            other..attHumidity += humidity;
        } else {
            (create(entCloud, getTile(target)))..attHumidity += humidity;
        }
    }
}

Entity: entCloud {
    name = "Cloud";
	mesh = "cloud.ply";
	opacity = 0.25;

	attributes {
	    attTicks, 10;
	}

    Script: tick {
        delayNextTick(self, .attTicks);

        neighbors = getNeighbors(self);
        for (n : neighbors) {
            if (->isBetterTile(n, tile)) {
                tile = n;
            }
        }

        other = getInstance(entCloud, tile);
        if (other) {
            other..attHumidity += self..attHumidity;
            destroy(self);
            return();
        }

        heightIncrease = getHeight(tile) - getHeight(self);
        moveTo(self, tile, 1);

        if (.attHumidity >= 100 || chance((.attHumidity + heightIncrease) / 100)) {
            tile = getTile(self);
            (create(entRain, tile))..attWater += 1;
            ..attHumidity -= 100;
        }

        if (getLightLevel(self) >= 70) { ..attHumidity -= 3; }

        if (.attHumidity <= 0) {
            destroy(self);
        }
    }

    Script: isBetterTile(subject, challenger) {
        if (!challenger) { return(true); }

        if (chance(0.9)) {
            return(isCloserToEquator(subject, challenger));
        } else {
            return(getHeight(subject) > getHeight(challenger));
        }
    }
}

Entity: entRain {
    name = "Rain";
    mesh = "raindrops.ply";
    opacity = 0.25;

    Script: tick {
        if (chance(0.5)) {
            tile = getTile(self);
            other = getInstance(entWater, tile);
            if (other) {
                other..attWater += 1;
            } else {
                if (getHeight(tile) >= getWaterHeight(tile)) {
                    //(create(entWater, tile))..attWater += 1;
                    tile..attHumidity += 100;
                }
            }
            ..attWater--;
        }

        if (.attWater <= 0) {
            destroy(self);
        }
    }
}

Entity: entCloud {
    name = "Cloud";
	mesh = mesh "cloud.ply";
	opacity = 0.25;

	attributes {
	    attTicks, 10;
		attSpeed, 1;
		attViewingDistance, 3;
	}

    Script: tick {
        delayNextTick(self, .attTicks);
		
		previousHeight = getHeight(self);
		
		if (->goal) {
			if (.attSpeed > 1) { print("speed: " + .attSpeed); }
			
			destination = moveTo(self, ->goal, .attSpeed, .attViewingDistance);
			if (destination == ->goal) { forget(->goal); }
			
			instances = getInstancesInRange(entCloud, getTile(self), 0);
			for (i : instances) {
				if (i != self) {
					self..attHumidity += i.attHumidity;
					destroy(i);
				}
			}
		} else {
			east = getLongitude(self);
			north = getLatitude(self);
			
			direction = east * 4 + north * 3 + main->angle;
			dx = cos(direction) * 10;
			dy = sin(direction) * 10;
			->goal = getTileFromCoords(east + dx, north + dy);
			
			// for(t : getTilesOfPath(getTile(self), ->goal, .attViewingDistance)) {
				// create(entMarker, t);
			// }
			
			if (chance(0.25)) { addEffect(self, effWindy); }
			if (chance(0.01)) { addEffect(self, effVeryWindy); }
			// if (->goal != getTile(self)) { print("goal: " + ->goal); }
		}
		
        // other = getInstance(entCloud, getTile(self));
        // if (other) {
            // other..attHumidity += self..attHumidity;
			// print("destroy cloud merge");
            // destroy(self);
            // return;
        // }
		
        heightIncrease = getHeight(self) - previousHeight;
        if (.attHumidity + heightIncrease >= 100) {
            (getOrCreate(entRain, getTile(self)))..attWater += 1;
            ..attHumidity -= 100;
        }

		ll = getLightLevel(self);
        if (ll >= 70) { ..attHumidity -= (ll - 70) / 5; }

        if (.attHumidity <= 0) {
            destroy(self);
        }
	}
}

Entity: entMarker {
	name = "Marker";
	mesh = mesh "marker.ply";
	opacity = 0.5;
	
	Script: tick {
		if (->ticks++ > 10) { destroy(self); }
	}
}

Entity: entCloudSpawner {
	name = "Cloud spawner";
	
	attributes {
		attTicks, 11;
	}
	
	Script: tick {
        delayNextTick(self, .attTicks);
		create(entCloud, getTile(self))..attHumidity = random(100);
	}
}

Entity: entRain {
    name = "Rain";
    mesh = mesh "raindrops.ply";
    opacity = 0.25;

    Script: tick {
        if (chance(0.5)) {
            tile = getTile(self);
            other = getInstance(entWater, tile);
            if (other) {
                other..attWater += 1;
            } else {
                if (getHeight(tile) >= getWaterHeight(tile)) {
                    //(create(entWater, tile))..attWater += 1;
                    tile..attHumidity += 100;
                }
            }
            ..attWater--;
        }

        if (.attWater <= 0) {
            destroy(self);
        }
    }
}

Effect: effWindy {
	name = "Windy";
	
	attributes {
		attSpeed, 1;
	}
	
	// Script: new(carrier) {
		// print("hi " + carrier.attSpeed);
		// print(self.attSpeed);
	// }
	// Script: tick(carrier) {
		// print(.attSpeed + " c: " + carrier);
	// }
}
Effect: effVeryWindy {
	name = "Very Windy";
	
	attributes {
		attSpeed, 2;
	}
}

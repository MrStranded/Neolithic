
///////////////////////////////////////////////////////////////////////////// Drives

Drive: driHording {
	Script: condition {
		require(! .attSleeping);
		require(getFullAtt("attNutrition", self) < .attGreed);
	}

	solutions {
		proPickUpFruit;
	}

	Script: getWeight() {
		return(.attGreed - getFullAtt("attNutrition", self));
	}
}

///////////////////////////////////////////////////////////////////////////// Processes

Process: proBeg {
	Script: condition {
		//print("trying to beg");
		require(->patron);
		require(isNeighbor(self, ->patron));

		->food = getItemAtt(->patron, "attVegetarian");
		require(->food);

		hunger = .attHungerSensitivity - .attNutrition;
		require(hunger > .attPride);
		require(hunger > ->patron.attGreed - ->patron.attPride);
	}

	Script: process {
		pickUp(self, ->food);
		->patron = false;
	}

	solutions {
		proSearchPatron;
	}
}

Process: proSearchPatron {
	Script: condition {
		//print("looking for patron");
		creatures = getInstancesInRange(getType(self), getTile(self), .attViewingDistance);
		->patron = false;
		for (creature : creatures) {
			if (creature != self && getItemAtt(creature, "attVegetarian")) {
				->patron = creature;
				break;
			}
		}
		require(->patron);
	}

	Script: process {
		//print("moving to patron");
		moveTo(self, ->patron, .attSpeed);
	}
}
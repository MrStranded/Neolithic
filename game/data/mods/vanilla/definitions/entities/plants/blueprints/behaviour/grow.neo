///////////////////////////////////////////////////////////////////////////// Grow

Drive: driGrow {
    solutions = {
		proGrow;
		proRest;
	}

    Script: condition { return .bodySize < .bodyPreference; }

    Script: getWeight {
		if (.bodySize >= .bodyPreference) { return  .bodyRestoration - .bodyHealth; }
		
        return(min(100, 100 + .bodyRestoration - percent(.bodySize, .bodyPreference)));
    }
}

Process: proGrow {
    Script: condition {
		require(getFullAtt(getTile(self), "bodySize") < 100 + .bodyPreference);
        require(.attNutrition >= .bodyRestoration);
		require(.fatigue <= .bodyRestoration);
    }

    Script: process {
		..bodySize += .bodyRestoration;
		..attNutrition -= .bodyRestoration * (1 - .attEfficieny / 100);
		..fatigue++;
    }
}

Process: proRest {
    Script: process {
		..fatigue -= .bodyRestoration;
    }
}

///////////////////////////////////////////////////////////////////////////// Grow into tree

Drive: driGrowIntoPlant {
    solutions = { proGrowIntoPlant; }

    Script: condition {
		return length(getItems(getTile(self), getType(self))) < 100 / max(1, .bodyPreference);
	}

    Script: getWeight {
        return 100;
    }
}

Process: proGrowIntoPlant {
    Script: condition {
        tile = getTile(self);

        require(isOnFloor(self));
        require(getLightLevel(self) + getTile(self).attLightLevel >= 100 - .bodyEfficiency);
        require(getFullAtt(tile, "bodySize") < 100);
        require(getHeight(self) >= getWaterHeight(self));
    }
    Script: process {
        setStage(self, "sapling");
		
        for (n : getNeighbors(self)) {
            effect = addEffect(n, effShadow);
            effect->cause = self;
        }
		
		forget(->age);
    }
}

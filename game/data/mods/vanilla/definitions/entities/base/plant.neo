Creature: cPlant {

	drives {
		driSoak;
		driGatherEnergy;
		driGrow;
		driDeathwish;
		driPlantReproduction;
	}

	knowledge {
		proSoak;
		proPhotosynthesis;
		proGrow;
		proDie;
	}

	attributes{
	    attTicks, 2;
		attMaxSize, 50, 10;
		attGrowthSize, 5, 1;
		attEfficiency, 50, 5;
	    attMatureAge, 420, 50;//2880;
	    attLightSensitivity, 20, 5;
	}
	
	Script: tick {
		->plantTick();
	}
	
	Script: plantTick {
	    delayNextTick(self, .attTicks);
	    ..attAge++;

	    if (getWaterHeight(self) > getHeight(self)) {
	        ..attDamage++;
	    }

		if (.attAge > .attMatureAge  && ! hasEffect(self, effCancer) && chance((.attAge - .attMatureAge) / .attMatureAge)) { // age death
		    addEffect(self, effCancer);
        }
		
		if (.attWater <= 0 && ! hasEffect(self, effDry) && chance(0.1)) {
		    addEffect(self, effDry);
        }
		
		if (.attDamage > .attSize) {
			destroy(self);
		}
	}
	
	Script: delete {
		getTile(self)..attNutrition += .attSize;
	}
	
	Stage: ripe {
		drives {
			driSoak;
			driGatherEnergy;
			driGrow;
			driDeathwish;
			driPlantReproduction;
		}
	}
	
	Stage: sapling {	
		drives {
			driSoak;
			driGatherEnergy;
			driGrow;
			driDeathwish;
		}
		
		Script: tick {
			->plantTick();
		
			if (.attSize >= .attMaxSize / 2) {
				setDefaultStage(self);
			}
		}
	}
	
    Stage: seed {
        drives { driGrowIntoTree; driGatherEnergy; }
        knowledge { proGrowIntoTree; proLeechFromHolder; }
		
		attributes {
			attSize, 1;
		}

        Script: tick() {
            if (isOnFloor(self) && chance(0.001)) {
                destroy(self);
            }
        }
    }
}

///////////////////////////////////////////////////////////////////////////// Shadow

Effect: effShadow {
    name = "Shadow";
	
	Script: tick() {
		..attLightLevel = - (->cause..attSize) / 6;
	}

    Script: removeCondition() {
        require(! ->cause);
    }
}

///////////////////////////////////////////////////////////////////////////// Drought

Effect: effDry {
    name = "Dry";
	
	Script: tick(carrier) {
		if (carrier.attWater <= 0) {
			if (..attDamage < carrier.attSize && chance(0.01)) {
				..attDamage++;
			}
		} else {
			..attDamage -= 10;
			carrier..attWater --;
		}
	}

    Script: removeCondition() {
        require(.attDamage <= 0 || carrier.attWater > 0);
    }
}

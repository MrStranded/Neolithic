Gui: gInstanceDetail {
	
	template = Vertical;
	
	Script: new(instance) {
		->instance = instance;
	    ->background = "gui/back_stone01.png";
		->textColor = [250, 200, 180];
		//->margin = [10, 10, 10, 10];
		->padding = [20, 30, 40, 50];
		//->absX = 100;
		//->absY = 60;
		->maxHeight = 200;
		
		->instanceList = [];
		->attributeList = [];
		->c = -1;
		
		update();
	}
	
	Script: tick() {
		if (! ->instance) {
			//clearGui();
			destroy(self);
			return;
		}
	
		update();
	}
	
	Script: update() {
		->text = getName(->instance);
		
		// Adding guis for new instances
		if (->c++ % 100 == 0) {
	
			for(attribute : eachAttribute(->instance)) {
				found = false;
				for (a : ->attributeList) {
					if (getAttId(a->attribute) == getAttId(attribute)) {
						found = true;
						break;
					}
				}
				if (!found) {
					->attributeList += addGui(self, gAttribute, attribute, ->instance);
				}
			}
			
			for(subInstance : getItems(->instance)) {
				found = false;
				for (i : ->instanceList) {
					if (subInstance == i->instance) {
						found = true;
						break;
					}
				}
				if (!found) {
					->instanceList += addGui(self, gSubInstance, subInstance);
				}
			}
			
		}
	}
}

Gui: gText {

	template = Vertical;
	
	Script: new(text) {
		->text = text;
	}
}

Gui: gSubInstance {
	template = Vertical;
	
	Script: new(i) {
		->instance = i;
		if (! ->instance) {
			destroy(self);
			return;
		}
	
		->padding = [0, 30, 0, 30];
		
		->parent = getHolder(->instance);
		->background = "gui/back_wood01.png";
		->backgroundHover = "gui/back_wood01_hover.png";
		->backgroundPressed = "gui/back_wood01_pressed.png";
		->text = getName(->instance);
	}
	
	Script: tick() {
		if (! ->instance || getHolder(->instance) != ->parent) {
			destroy(self);
		}
	}
	
	Script: click() {
		clearGui();
		createGui(gInstanceDetail, ->instance);
	}
}

Gui: gAttribute {

	template = Horizontal;
	
	Script: new(attribute, instance) {
		->attribute = attribute;
		->instance = instance;
		
		addGui(self, gAttributeChangeButton, attribute, instance, -10, self);
		addGui(self, gAttributeChangeButton, attribute, instance, -1, self);
		addGui(self, gAttributeChangeButton, attribute, instance, 1, self);
		addGui(self, gAttributeChangeButton, attribute, instance, 10, self);
		->textField = addGui(self, gAttributeText, attribute, instance);
	}
	
	Script: tick() {
		if (! ->instance) {
			destroy(self);
			return;
		}
	
		value = getAttValue(->instance, getAttId(->attribute));
		if (value == 0) { destroy(self); }
	}
	
	Script: update() {
		->textField->updateText();
	}
}

Gui: gAttributeText {
	Script: new(attribute, instance) {
		->attribute = attribute;
		->instance = instance;
		
		->textColor = [200, 240, 180];
		
		updateText();
	}
	
	Script: tick() {
		updateText();
	}
	
	Script: updateText() {
		value = getAttValue(->instance, getAttId(->attribute));
		->text = getName(->attribute) + ": " + value;
	}
}

Gui: gAttributeChangeButton {
	Script: new(attribute, instance, difference, parent) {
		->attribute = attribute;
		->instance = instance;
		->difference = difference;
		->parent = parent;
	
		if (difference > 0) {
			->text = "+" + difference;
		} else {
			->text = difference;
		}
		->background = "gui/back_wood01.png";
		->backgroundHover = "gui/back_wood01_hover.png";
		->backgroundPressed = "gui/back_wood01_pressed.png";
		
		->padding = [0, 5, 0, 5];
	}
	
	Script: click() {
		getAtt(->instance, getAttId(->attribute)) += ->difference;
		->parent->update();
	}
}

Gui: gVariables {

	template = Vertical;
	
	Script: new(target) {
		->target = target;
	}
	
	Script: tick() {
		clearGui(self);
		for (var : eachVariable(->target)) {
			addGui(self, gText, var);
		}
	}

}

///////////////////////////////////////////////////////////////////////////// Attributes
Attribute: attLife { name = "Life"; }
Attribute: attViewingDistance { name = "Viewing Distance"; }
Attribute: attNutrition { name = "Nutrition"; }
Attribute: attEdible { name = "Edible"; }

///////////////////////////////////////////////////////////////////////////// Tiles

Tile: tDirt {
	name = "Dirt";

	preferredHeight = 128,5;

	color {
		200;
		150;
		30;
	}

	Script: tick {
		if (chance(0.01)) {
			change(self,tGras);
		}
	}
}

Tile: tGras {
	name = "Gras";
	preferredHeight = 180;
	preferredHeightBlur = 20;

	color {
		120;200;50;
	}

	attributes {
		attNutrition, 3;
	}
}

Tile: tStone {
	preferredHeight = 240;preferredHeightBlur = 10;
	name = "Stone"; color {150;150;120;}
}

///////////////////////////////////////////////////////////////////////////// Creatures

Creature: cDuck {
	name = "Duck";

	knowledge {
		proStroll;
		proEatBread;
	}

	drives {
		driHunger;
	}

	attributes {
		attLife, 10;
		attSpeed, 1;
		attViewingDistance, 10;
		attNutrition, 5;
	}

	Script: tick {
		if (chance(0.1)) {
			self.attNutrition -= 1;
		}
	}
}

Drive: driHunger {
	Script: trigger {
		require(self.attNutrition < 5);
	}

	solutions {
		proEat;
	}
}

Process: proStroll {
	//Script: educt {}
	Script: product {
		i = random(3);
		moveTo(self, getNeighbour(getTile(self), i));
	}
	
	//alternatives {}
	
	//Script: discovery {}
}

Process: proEat {
	Script: educt {
		require(hasItemAtt(self, attEdible) > 0);
	}
	Script: product {
		item = getItemAtt(self, attEdible);
		item.consume(self);
	}

	alternatives {
		proGatherFood;
	}
}

Process: proGatherFood {
	Script: educt {
		require(hasAttInRange(self, attEdible, self.attViewingDistance));
	}
	Script: product {
		pickUp(self, getAttInRange(self, attEdible, self.attViewingDistance));
	}

	Script: discovery {
		require(getSpeed(self) > 0);
		require(self.attViewingDistance > 0);
	}
}

///////////////////////////////////////////////////////////////////////////// Items

Entity: entFruit {
	name = "Apple";

	attributes {
		attNutrition, 10;
		attEdible, 1;
	}

	Script: consume(actor) {
		actor.attNutrition += self.attNutrition;
		destroy(self);
	}
}

///////////////////////////////////////////////////////////////////////////// Plants

Entity: entTree {
	name = "Tree";

	drives {
		driPlantReproduction;
	}

	knowledge {
		proPhotoSynthesis;
		proCreateFruit;
	}
}

Drive: driPlantReproduction {
	solutions {
		proPhotoSynthesis;
		proCreateFruit;
	}
}

Process: proPhotoSynthesis {
	Script: educt {
		require(getLightLevel(self) + self.attLightLevel >= 50);
		require(getTile(self).attHumidity >= 20);
	}
	Script: product {
		getTile(self).attHumidity -= 5;
		self.attNutrition += 5;
	}

	alternatives {} // there is no way for a plant to create light (currently?)

	Script: discovery(actor) { // there is no way for an entity to learn photosynthesisis
	}
}

Process: proCreateFruit {
	Script: educt {
		require(chance(0.1));
		require(hasAttInRange(self, attEdible, 0) == 0);
		require(self.attNutrition >= 10);
	}
	Script: product {
		create(entFruit, getTile(self));
	}
}
